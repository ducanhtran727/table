[{"C:\\Users\\ASUS\\Documents\\GitHub\\table\\table\\src\\index.js":"1","C:\\Users\\ASUS\\Documents\\GitHub\\table\\table\\src\\App.js":"2","C:\\Users\\ASUS\\Documents\\GitHub\\table\\table\\src\\reportWebVitals.js":"3","C:\\Users\\ASUS\\Documents\\GitHub\\table\\table\\src\\Edit.js":"4","C:\\Users\\ASUS\\Documents\\GitHub\\table\\table\\src\\Table.js":"5","C:\\Users\\ASUS\\Documents\\GitHub\\table\\table\\src\\serviceWorker.js":"6","C:\\Users\\ASUS\\Documents\\GitHub\\table\\table\\src\\FormPost.js":"7"},{"size":548,"mtime":1609529690018,"results":"8","hashOfConfig":"9"},{"size":568,"mtime":1609634640652,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2411,"mtime":1609630996043,"results":"12","hashOfConfig":"9"},{"size":1827,"mtime":1609619446430,"results":"13","hashOfConfig":"9"},{"size":5227,"mtime":1609529636788,"results":"14","hashOfConfig":"9"},{"size":2848,"mtime":1609634332617,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1sucf36",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"C:\\Users\\ASUS\\Documents\\GitHub\\table\\table\\src\\index.js",[],["35","36"],"C:\\Users\\ASUS\\Documents\\GitHub\\table\\table\\src\\App.js",[],"C:\\Users\\ASUS\\Documents\\GitHub\\table\\table\\src\\reportWebVitals.js",[],["37","38"],"C:\\Users\\ASUS\\Documents\\GitHub\\table\\table\\src\\Edit.js",["39","40"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {FormControl} from 'react-bootstrap';\r\nimport {Form} from 'react-bootstrap';\r\nimport {Button} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nexport const Edit = () => {\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    decription: \"\",\r\n  });\r\n  const [value, setValue] = useState({\r\n    name: \"\",\r\n    decription: \"\",\r\n  });\r\n  // const [con, setCon] = useState(false);\r\n  const id = useParams().id;\r\n  const initData = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        `https://jsonplaceholder.typicode.com/posts/${id}`\r\n      );\r\n      const rep = res.data;\r\n      console.log(rep);\r\n      setData({\r\n        name: rep.title,\r\n        decription: rep.body,\r\n      });\r\n      console.log(res.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    initData();\r\n  }, []);\r\n  const handleChange = (event) => {\r\n    console.log(event.target);\r\n    setValue({\r\n      ...value,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const putData = async () => {\r\n    try {\r\n      const res = await axios.put(\r\n        `https://jsonplaceholder.typicode.com/posts/${id}`,\r\n        {\r\n          userId: 1,\r\n          id: id,\r\n          title: value.name,\r\n          body: value.decription,\r\n        }\r\n      );\r\n      console.log(res);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.Preventdefault();\r\n    putData();\r\n  };\r\n  // })\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Label>\r\n            NAME :\r\n          </Form.Label>\r\n          <h5>{data.name}</h5>\r\n          <Form.Control\r\n          value={value.name}\r\n          onChange={handleChange}\r\n          name=\"name\" type=\"name\" />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>\r\n            Decription :\r\n          </Form.Label>\r\n          <p>{data.decription}</p>\r\n          <Form.Control\r\n          value={value.decription}\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          name=\"decription\"   as=\"textarea\" rows={3} />\r\n        </Form.Group>\r\n        <Button type=\"submit\"\r\n          variant=\"outline-primary\">Change</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\ASUS\\Documents\\GitHub\\table\\table\\src\\Table.js",["41","42","43","44","45","46"],"import React, { useState, useEffect, useRef, useImperativeHandle ,forwardRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport MaterialTable from \"material-table\";\r\nimport {DataGrid} from '@material-ui/core'\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Route} from \"react-router-dom\";\r\nimport {Edit} from './Edit';\r\nimport '@material-ui/icons';\r\n\r\nconst colunms = [\r\n  { title: \"Name\", field: \"name\" },\r\n  { title: \"Email\", field: \"email\" },\r\n  { title: \"Description\", field: \"body\" },\r\n];\r\nexport const Table = () => {\r\n  const [list, setList] = useState([]);\r\n  const [toggle,setToggle] = useState(true);\r\n  const initData = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"https://jsonplaceholder.typicode.com/comments\"\r\n      );\r\n      console.log(res.data[0].id);\r\n      setList(res?.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    initData();\r\n  }, [toggle]);\r\n  const history = useHistory();\r\n  console.log(history);\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        columns={colunms}\r\n        title=\"Table Test\"\r\n        data={list} \r\n        actions={[\r\n          {\r\n            icon: \"save\",\r\n            tooltip: \"Save User\",\r\n            onClick: (event, rowData) => {\r\n            alert(\"You update id : \" + rowData.id);\r\n            console.log(rowData);\r\n            history.push(`/edit/${rowData.id}`);\r\n            },\r\n          },\r\n            {\r\n          icon: 'delete',\r\n          tooltip: 'Delete User',\r\n          onClick: (event, rowData) => {\r\n              alert(\"You want to delete \" + rowData.name)\r\n              axios.delete(`https://jsonplaceholder.typicode.com/posts/${rowData.id}`);\r\n              setToggle(!toggle)\r\n              }\r\n            }\r\n          \r\n        ]}\r\n      />\r\n      \r\n    </div>\r\n  );\r\n};","C:\\Users\\ASUS\\Documents\\GitHub\\table\\table\\src\\serviceWorker.js",[],"C:\\Users\\ASUS\\Documents\\GitHub\\table\\table\\src\\FormPost.js",["47"],"import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Button} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Form} from 'react-bootstrap';\r\nconst SignupSchema = Yup.object().shape({\r\n   name: Yup.string()\r\n     .min(3, 'Too Short!')\r\n     .max(36, 'Too Long!')\r\n     .required('Required'),\r\n   description: Yup.string()\r\n     .min(3, 'Too Short!')\r\n     .max(200, 'Too Long!')\r\n     .required('Required'),\r\n   email: Yup.string().email('Invalid email').required('Required'),\r\n });\r\n\r\nexport const FormPost = ()=>{\r\n    // const [value,setValue] = useState({\r\n    //     name:\"\",\r\n    //     description:\"\",\r\n    //     email:\"\"\r\n    // })\r\n    // console.log(value)\r\n    return(\r\n    <div>\r\n        <Formik\r\n        initialValues={{\r\n         name: '',\r\n         description: '',\r\n         email: '',\r\n       }}\r\n       validationSchema={SignupSchema}\r\n       onSubmit={(values,{setSubmitting , resetForm})=>{\r\n           setSubmitting(true);\r\n           const value = JSON.stringify(values,null,3)\r\n           console.log(value)\r\n           setTimeout(()=>{\r\n            axios.post('https://jsonplaceholder.typicode.com/comments',{\r\n                name: value.name,\r\n                email : value.email,\r\n                body : value.description\r\n            })\r\n            resetForm();\r\n            setSubmitting(false)\r\n           },500)\r\n       }}\r\n     >\r\n       {({ errors, touched , values,handleBlur,handleChange,handleSubmit ,isSubmitting }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type=\"text\" name=\"name\" placeholder=\"Enter your name\" onChange={handleChange} onBlur={handleBlur} value={values.name}/>\r\n                {touched.name && errors.name ? <div>Name Invalid</div> : null}\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter your email\" onChange={handleChange} onBlur={handleBlur} value={values.email}/>\r\n                {touched.email && errors.email ? <div>Email Invalid</div> : null}\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} type=\"email\" name=\"description\" placeholder=\"Description\" onChange={handleChange} onBlur={handleBlur} value={values.description}/>\r\n                {touched.description && errors.description ? <div>Description Invalid</div> : null}\r\n            </Form.Group>\r\n            <Button type=\"submit\" variant=\"outline-primary\" disabled={isSubmitting} >Post</Button>\r\n        </Form>\r\n       )}\r\n     </Formik>\r\n   </div>\r\n    )\r\n}\r\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"48","replacedBy":"52"},{"ruleId":"50","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":4,"column":9,"nodeType":"56","messageId":"57","endLine":4,"endColumn":20},{"ruleId":"58","severity":1,"message":"59","line":37,"column":6,"nodeType":"60","endLine":37,"endColumn":8,"suggestions":"61"},{"ruleId":"54","severity":1,"message":"62","line":1,"column":38,"nodeType":"56","messageId":"57","endLine":1,"endColumn":44},{"ruleId":"54","severity":1,"message":"63","line":1,"column":46,"nodeType":"56","messageId":"57","endLine":1,"endColumn":65},{"ruleId":"54","severity":1,"message":"64","line":1,"column":67,"nodeType":"56","messageId":"57","endLine":1,"endColumn":77},{"ruleId":"54","severity":1,"message":"65","line":4,"column":9,"nodeType":"56","messageId":"57","endLine":4,"endColumn":17},{"ruleId":"54","severity":1,"message":"66","line":6,"column":9,"nodeType":"56","messageId":"57","endLine":6,"endColumn":14},{"ruleId":"54","severity":1,"message":"67","line":7,"column":9,"nodeType":"56","messageId":"57","endLine":7,"endColumn":13},{"ruleId":"54","severity":1,"message":"68","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],["69"],["70"],"no-unused-vars","'FormControl' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initData'. Either include it or remove the dependency array.","ArrayExpression",["71"],"'useRef' is defined but never used.","'useImperativeHandle' is defined but never used.","'forwardRef' is defined but never used.","'DataGrid' is defined but never used.","'Route' is defined but never used.","'Edit' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [initData]",{"range":"74","text":"75"},[992,994],"[initData]"]